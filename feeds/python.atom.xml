<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Rock and Code</title><link href="http://vutsuak16.github.io./" rel="alternate"></link><link href="http://vutsuak16.github.io./feeds/python.atom.xml" rel="self"></link><id>http://vutsuak16.github.io./</id><updated>2016-07-16T00:00:00+05:30</updated><entry><title>Spell Corrector</title><link href="http://vutsuak16.github.io./spell-corrector.html" rel="alternate"></link><published>2016-07-16T00:00:00+05:30</published><author><name>kaustuv deolal</name></author><id>tag:vutsuak16.github.io.,2016-07-16:spell-corrector.html</id><summary type="html">&lt;h2&gt;Spell Corrector How it Works??&lt;/h2&gt;
&lt;p&gt;The Spell Corrector uses &lt;code&gt;Probability Theory&lt;/code&gt;. The objective here is to maximize the function "P(c/w)".
Where &lt;em&gt;c&lt;/em&gt; stands for correction  and &lt;em&gt;w&lt;/em&gt; for words. It is quite obvious that we need to find the best 
possible correction for the word encoutered&lt;/p&gt;</summary><category term="python"></category><category term="NLP"></category></entry><entry><title>timeit module python</title><link href="http://vutsuak16.github.io./timeit-module-python.html" rel="alternate"></link><published>2016-06-30T00:00:00+05:30</published><author><name>kaustuv deolal</name></author><id>tag:vutsuak16.github.io.,2016-06-30:timeit-module-python.html</id><summary type="html">&lt;p&gt;&lt;em&gt;timeit&lt;/em&gt;  is a usefule python module , that helps you see the running time of various statements in python&lt;/p&gt;
&lt;h3&gt;Example&lt;/h3&gt;
&lt;p&gt;:::python
     import timeit 
     timeit.timeit("map(str,range(1000)",number=10000)
     timeit.timeit("[str(i) for i in range(1000)]",number=10000)&lt;/p&gt;
&lt;p&gt;The output would be:&lt;/p&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img alt="alt text" src="https://raw.githubusercontent.com/Vutsuak16/Vutsuak16.github.io/master/images/timeit.PNG" /&gt;&lt;/p&gt;</summary></entry></feed>